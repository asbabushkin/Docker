## Лекция 5. Переменные окружения, логи и порты.md
### Практика.
  5.9
    Скачайте образ kcoursedocker/task-5.9 и поднимите на его основе контейнер.
    В контейнере на определенном порту будет работать веб-приложение. Вам нужно выяснить, что это за порт.
    Когда вы это сделаете, поднимите контейнер еще раз, но уже прокиньте нужный порт. 
    ---------------------------
    Решение 1.    
    Необходимо войти в работающий контейнер при помощи команды exec и запустить утилиту netstat с атрибутом -l (или --listening) для вывода списка 
    только прослушиваемых портов (имеют метку LISTEN):
      docker exec <container_id> netstat -l
    Для получения полной информации о портах и сетевых подключениях в работающем контейнере утилиту netstat следует запустить с атрибутом -tupln, где
      -l или --listening - посмотреть только прослушиваемые порты; -p или --program - показать имя программы и ее PID; -t или --tcp - показать tcp порты;
      -u или --udp показать udp порты; -n или --numeric показывать ip адреса в числовом виде.
    Решение 2.
    По аналогии использовать утилиту ss с теми же атрибутами:
      docker exec <container_id> ss -l
  5.10
    Давайте поднимем базу данных PostgreSQL и сделаем какой-нибудь SQL запрос.
    Вам нужно поднять контейнер на основе образа postgres:14.
    При поднятии укажите пароль и пользователя, но не указывайте базу данных (т.е. не используйте переменную окружения POSTGRES_DB).
    В качестве ответа через запятую укажите имена неймспейсов из каталога pg_namespace. У вас должно получиться 4 значения.
    -------------------------
    Решение 1.
    Шаг 1.
    Поднимем контейнер с посгресом в detauch-режиме и переменными окружение (логин, пароль):
      docker run --name my_postgres_container -d -e POSTGRES_USER=alex -e POSTGRES_PASSWORD=alex_password -p 6543:5432 postgres:14
      где 
      6543 - произвольный порт на хосте
      5432 - порт посгреса в контейнере
    Шаг 2.    
    Войти в контейнер с использованием созданного логина:
      docker exec -it <container_id> psql -U alex
    Шаг 3.
    Создать sql-запрос:
      SELECT nspname FROM pg_namespace;

    Решение 2.    
    Шаг 1.
      См. Решение 1 Шаг 1.
    Шаг 2.
      Подключить DBeaver к посгресу в контейнере:
        Host: localhost
        Port: 6543 (произвольный порт на хосте, проброшенный в контейнер)
        Username: alex
        Password: alex_password
    Шаг 3.
      В sql-запроснике DBeaver создать запрос:
        SELECT nspname FROM pg_namespace;
    Источник: https://wkrzywiec.medium.com/database-in-a-docker-container-how-to-start-and-whats-it-about-5e3ceea77e50
